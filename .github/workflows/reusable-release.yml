name: Reusable Release Workflow

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node.js version to use'
        required: false
        type: string
        default: '22'
      build-command:
        description: 'Build command to run'
        required: false
        type: string
        default: 'npm run build'
      test-command:
        description: 'Test command to run'
        required: false
        type: string
        default: 'npm test'
      lint-command:
        description: 'Lint command to run'
        required: false
        type: string
        default: 'npm run lint'
      typecheck-command:
        description: 'Type check command to run'
        required: false
        type: string
        default: 'npm run typecheck'
      version-type:
        description: 'Version bump type (patch, minor, major)'
        required: false
        type: string
        default: 'patch'
      skip-tests:
        description: 'Skip running tests'
        required: false
        type: boolean
        default: false
      skip-lint:
        description: 'Skip running linting'
        required: false
        type: boolean
        default: false
      skip-typecheck:
        description: 'Skip running type checking'
        required: false
        type: boolean
        default: false

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          registry-url: 'https://npm.pkg.github.com'
          scope: '@YallaSystems'

      - name: Install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build package
        run: ${{ inputs.build-command }}

      - name: Run linting
        if: ${{ !inputs.skip-lint }}
        run: ${{ inputs.lint-command }}
        continue-on-error: false

      - name: Run type checking
        if: ${{ !inputs.skip-typecheck }}
        run: ${{ inputs.typecheck-command }}
        continue-on-error: false

      - name: Run tests
        if: ${{ !inputs.skip-tests }}
        run: ${{ inputs.test-command }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Check if version bump is needed
        id: version-check
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          # Check if this version already exists in GitHub Packages
          if npm view @YallaSystems/$(node -p "require('./package.json').name.split('/')[1]")@$CURRENT_VERSION version 2>/dev/null; then
            echo "needs-bump=true" >> $GITHUB_OUTPUT
            echo "Version $CURRENT_VERSION already exists, bumping needed"
          else
            echo "needs-bump=false" >> $GITHUB_OUTPUT
            echo "Version $CURRENT_VERSION does not exist, no bump needed"
          fi

      - name: Bump version
        if: steps.version-check.outputs.needs-bump == 'true'
        run: |
          npm version ${{ inputs.version-type }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "Bumped version to $NEW_VERSION"

      - name: Commit and tag version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          git add package.json package-lock.json
          git commit -m "chore: release v$VERSION" || echo "No changes to commit"
          git tag -a "v$VERSION" -m "Release v$VERSION" || echo "Tag already exists"
          git push --follow-tags

      - name: Publish to GitHub Packages
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}